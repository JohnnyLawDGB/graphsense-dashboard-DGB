{-
   GraphSense API
   GraphSense API provides programmatic access to various ledgers' addresses, entities, blocks, transactions and tags for automated and highly efficient forensics tasks.

   The version of the OpenAPI document: 1.1.1
   Contact: contact@ikna.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Addresses exposing (..)

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode


type Direction
    = DirectionIn
    | DirectionOut


directionVariants : List Direction
directionVariants =
    [ DirectionIn
    , DirectionOut
    ]


stringFromDirection : Direction -> String
stringFromDirection model =
    case model of
        DirectionIn ->
            "in"

        DirectionOut ->
            "out"


makeDirectionFromString : String -> Maybe Direction
makeDirectionFromString str =
    case str of
    "in" ->
        Just DirectionIn

    "out" ->
        Just DirectionOut

    _ ->
        Nothing





getAddress : (String) -> (String) -> Api.Request Api.Data.Address
getAddress currency_path address_path =
    Api.request
        "GET"
        "/{currency}/addresses/{address}"
        [ ( "currency", identity currency_path ), ( "address", identity address_path ) ]
        []
        []
        Nothing
        Api.Data.addressDecoder



getAddressEntity : (String) -> (String) -> Api.Request Api.Data.Entity
getAddressEntity currency_path address_path =
    Api.request
        "GET"
        "/{currency}/addresses/{address}/entity"
        [ ( "currency", identity currency_path ), ( "address", identity address_path ) ]
        []
        []
        Nothing
        Api.Data.entityDecoder



listAddressLinks : (String) -> (String) -> (String) -> Maybe (String) -> Maybe (Int) -> Api.Request Api.Data.Links
listAddressLinks currency_path address_path neighbor_query page_query pagesize_query =
    Api.request
        "GET"
        "/{currency}/addresses/{address}/links"
        [ ( "currency", identity currency_path ), ( "address", identity address_path ) ]
        [ ( "neighbor", Just <| (identity) neighbor_query ), ( "page", Maybe.map (identity) page_query ), ( "pagesize", Maybe.map (String.fromInt) pagesize_query ) ]
        []
        Nothing
        Api.Data.linksDecoder



listAddressNeighbors : (String) -> (String) -> (Direction) -> Maybe (List String) -> Maybe (Bool) -> Maybe (String) -> Maybe (Int) -> Api.Request Api.Data.NeighborAddresses
listAddressNeighbors currency_path address_path direction_query onlyIds_query includeLabels_query page_query pagesize_query =
    Api.request
        "GET"
        "/{currency}/addresses/{address}/neighbors"
        [ ( "currency", identity currency_path ), ( "address", identity address_path ) ]
        [ ( "direction", Just <| (stringFromDirection) direction_query ), ( "only_ids", Maybe.map (String.join "," << List.map identity) onlyIds_query ), ( "include_labels", Maybe.map ((\val -> if val then "true" else "false")) includeLabels_query ), ( "page", Maybe.map (identity) page_query ), ( "pagesize", Maybe.map (String.fromInt) pagesize_query ) ]
        []
        Nothing
        Api.Data.neighborAddressesDecoder



listAddressTxs : (String) -> (String) -> Maybe (Direction) -> Maybe (String) -> Maybe (Int) -> Api.Request Api.Data.AddressTxs
listAddressTxs currency_path address_path direction_query page_query pagesize_query =
    Api.request
        "GET"
        "/{currency}/addresses/{address}/txs"
        [ ( "currency", identity currency_path ), ( "address", identity address_path ) ]
        [ ( "direction", Maybe.map (stringFromDirection) direction_query ), ( "page", Maybe.map (identity) page_query ), ( "pagesize", Maybe.map (String.fromInt) pagesize_query ) ]
        []
        Nothing
        Api.Data.addressTxsDecoder



listTagsByAddress : (String) -> (String) -> Maybe (String) -> Maybe (Int) -> Api.Request Api.Data.AddressTags
listTagsByAddress currency_path address_path page_query pagesize_query =
    Api.request
        "GET"
        "/{currency}/addresses/{address}/tags"
        [ ( "currency", identity currency_path ), ( "address", identity address_path ) ]
        [ ( "page", Maybe.map (identity) page_query ), ( "pagesize", Maybe.map (String.fromInt) pagesize_query ) ]
        []
        Nothing
        Api.Data.addressTagsDecoder

