{-
   GraphSense API
   GraphSense API provides programmatic access to various ledgers' addresses, entities, blocks, transactions and tags for automated and highly efficient forensics tasks.

   The version of the OpenAPI document: 1.0.1
   Contact: contact@ikna.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Txs exposing (..)

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode


type Io
    = IoInputs
    | IoOutputs


ioVariants : List Io
ioVariants =
    [ IoInputs
    , IoOutputs
    ]


stringFromIo : Io -> String
stringFromIo model =
    case model of
        IoInputs ->
            "inputs"

        IoOutputs ->
            "outputs"


makeIoFromString : String -> Maybe Io
makeIoFromString str =
    case str of
    "inputs" ->
        Just IoInputs

    "outputs" ->
        Just IoOutputs

    _ ->
        Nothing






getTx : (String) -> (String) -> Maybe (Bool) -> Api.Request Api.Data.Tx
getTx currency_path txHash_path includeIo_query =
    Api.request
        "GET"
        "/{currency}/txs/{txHash}"
        [ ( "currency", identity currency_path ), ( "txHash", identity txHash_path ) ]
        [ ( "include_io", Maybe.map ((\val -> if val then "true" else "false")) includeIo_query ) ]
        []
        Nothing
        Api.Data.txDecoder



getTxIo : (String) -> (String) -> (Io) -> Api.Request (List Api.Data.TxValue)
getTxIo currency_path txHash_path io_path =
    Api.request
        "GET"
        "/{currency}/txs/{txHash}/{io}"
        [ ( "currency", identity currency_path ), ( "txHash", identity txHash_path ), ( "io", stringFromIo io_path ) ]
        []
        []
        Nothing
        (Json.Decode.list Api.Data.txValueDecoder)

